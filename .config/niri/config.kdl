// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.

/********************
 * MONITORS/OUTPUTS *
 ********************/
output "HDMI-A-1" {
    mode "1920x1080@71.910"
    scale 1
    transform "normal"
}

/**********
 * INPUTS *
 **********/
input {
    keyboard {
        xkb { 
          layout "br";
        }
    }
}
gestures {
    hot-corners {
        off
  }
}

/**********
 * LAYOUT *
 **********/
layout {
    // When to center a column when changing focus, options are:
    // "never", default behavior, focusing an off-screen column will keep at the left or right edge of the screen.
    // "always", the focused column will always be centered.
    // "on-overflow", focusing a column will center it if it doesn't fit together with the previously focused column.
    center-focused-column "on-overflow"
    
    default-column-width { proportion 0.5; }
    
    gaps 7
    
    border {
        width 2
        active-color "#7fc8ff"
        inactive-color "#505050"
        urgent-color "#9b0000"
        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
        
    focus-ring { off ; }
}

//https://github.com/YaLTeR/niri/wiki/Configuration:-Miscellaneous
spawn-at-startup "systemctl --user start hyprpolkitagent"
spawn-at-startup "swaync"
spawn-at-startup "swww-daemon"
spawn-at-startup "hyprsunset --temperature 4700"

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"


/****************
 * WINDOW RULES *
 ****************/
// Since there's no specific window stated below, it applies to all windows.
window-rule {
    open-maximized true
    geometry-corner-radius 10
    clip-to-geometry true
    draw-border-with-background false
}

window-rule {
    match app-id=r#"alacritty$"#
    open-maximized false
}

window-rule {
    match app-id=r#"swayimg$"#
    open-maximized false
    open-floating true
}

window-rule {
    // Match thunar windows with Rename in title / rename dialog fix.
    match app-id=r#"^thunar$"# title="Rename"
    open-floating true
}

window-rule {
    match app-id=r#"^thunar$"# title="File Operation Progress"
    open-floating true
}

/*********
 * BINDS *
 *********/
binds {
    Mod+Shift+C { center-column; }
    Mod+Return hotkey-overlay-title="Open terminal" { spawn "alacritty"; }
    Mod+R hotkey-overlay-title="Run fuzzel" { spawn "fuzzel"; }
    Mod+E hotkey-overlay-title="Run thunar" { spawn "thunar"; }
    Mod+Shift+B hotkey-overlay-title="Waybar toggle" { spawn "bash" "-c" "killall waybar || waybar"; }
  
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioPlay     allow-when-locked=true { spawn "playerctl" "play-pause"; }
    XF86AudioNext     allow-when-locked=true { spawn "playerctl" "next"; }
    XF86AudioPrev     allow-when-locked=true { spawn "playerctl" "previous"; }
    XF86AudioStop     allow-when-locked=true { spawn "playerctl" "stop"; }

    Mod+C { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Right { focus-column-right; }
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Right { move-column-right; }
    
    Mod+Down  { focus-workspace-down; }
    Mod+Up    { focus-workspace-up; }
    Mod+Ctrl+Down  { move-column-to-workspace-down; }
    Mod+Ctrl+Up    { move-column-to-workspace-up; }
    
    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-column-right; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-column-left; }
    Mod+Ctrl+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+Ctrl+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    
    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }
    
    Mod+MouseBack cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+MouseForward   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+A repeat=false { toggle-overview; }
    Mod+MouseMiddle repeat=false { toggle-overview; }
    
    Mod+Ctrl+R { reset-window-height; }
    Mod+S { maximize-column; }
    Mod+F       { toggle-window-floating; }
    Mod+Shift+F { fullscreen-window; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Shift+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Ctrl+Alt+Delete { quit; }
}
